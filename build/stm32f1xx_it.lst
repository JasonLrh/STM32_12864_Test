ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB66:
  25              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f1xx_it.c ****   *
  17:Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Src/stm32f1xx_it.c ****   */
  19:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f1xx_it.c **** #include "main.h"
  23:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f1xx_it.c **** 
  28:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f1xx_it.c **** 
  31:Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f1xx_it.c **** 
  33:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 2


  34:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f1xx_it.c ****  
  36:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f1xx_it.c **** 
  38:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f1xx_it.c **** 
  41:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f1xx_it.c **** 
  43:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f1xx_it.c **** 
  46:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f1xx_it.c **** 
  48:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f1xx_it.c **** 
  51:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f1xx_it.c **** 
  53:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f1xx_it.c **** 
  56:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32f1xx_it.c **** 
  58:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32f1xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  60:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_memtomem_dma1_channel1;
  61:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  62:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  63:Src/stm32f1xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  64:Src/stm32f1xx_it.c **** extern SPI_HandleTypeDef hspi1;
  65:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_tim1_ch1;
  66:Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  67:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  68:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  69:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  70:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  71:Src/stm32f1xx_it.c **** 
  72:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  73:Src/stm32f1xx_it.c **** 
  74:Src/stm32f1xx_it.c **** /******************************************************************************/
  75:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  76:Src/stm32f1xx_it.c **** /******************************************************************************/
  77:Src/stm32f1xx_it.c **** /**
  78:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  79:Src/stm32f1xx_it.c ****   */
  80:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  81:Src/stm32f1xx_it.c **** {
  26              		.loc 1 81 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  82:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  83:Src/stm32f1xx_it.c **** 
  84:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  85:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 3


  86:Src/stm32f1xx_it.c **** 
  87:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  88:Src/stm32f1xx_it.c **** }
  31              		.loc 1 88 0
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE66:
  36              		.section	.text.HardFault_Handler,"ax",%progbits
  37              		.align	1
  38              		.global	HardFault_Handler
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	HardFault_Handler:
  45              	.LFB67:
  89:Src/stm32f1xx_it.c **** 
  90:Src/stm32f1xx_it.c **** /**
  91:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  92:Src/stm32f1xx_it.c ****   */
  93:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  94:Src/stm32f1xx_it.c **** {
  46              		.loc 1 94 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE67:
  57              		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	1
  59              		.global	MemManage_Handler
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu softvfp
  65              	MemManage_Handler:
  66              	.LFB68:
  95:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  96:Src/stm32f1xx_it.c **** 
  97:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  98:Src/stm32f1xx_it.c ****   while (1)
  99:Src/stm32f1xx_it.c ****   {
 100:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 101:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 102:Src/stm32f1xx_it.c ****   }
 103:Src/stm32f1xx_it.c **** }
 104:Src/stm32f1xx_it.c **** 
 105:Src/stm32f1xx_it.c **** /**
 106:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 107:Src/stm32f1xx_it.c ****   */
 108:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 109:Src/stm32f1xx_it.c **** {
  67              		.loc 1 109 0
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 4


  68              		.cfi_startproc
  69              		@ Volatile: function does not return.
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73              	.L5:
  74 0000 FEE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE68:
  78              		.section	.text.BusFault_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	BusFault_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	BusFault_Handler:
  87              	.LFB69:
 110:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 111:Src/stm32f1xx_it.c **** 
 112:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 113:Src/stm32f1xx_it.c ****   while (1)
 114:Src/stm32f1xx_it.c ****   {
 115:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 116:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 117:Src/stm32f1xx_it.c ****   }
 118:Src/stm32f1xx_it.c **** }
 119:Src/stm32f1xx_it.c **** 
 120:Src/stm32f1xx_it.c **** /**
 121:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 122:Src/stm32f1xx_it.c ****   */
 123:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 124:Src/stm32f1xx_it.c **** {
  88              		.loc 1 124 0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.L7:
  95 0000 FEE7     		b	.L7
  96              		.cfi_endproc
  97              	.LFE69:
  99              		.section	.text.UsageFault_Handler,"ax",%progbits
 100              		.align	1
 101              		.global	UsageFault_Handler
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu softvfp
 107              	UsageFault_Handler:
 108              	.LFB70:
 125:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 126:Src/stm32f1xx_it.c **** 
 127:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 128:Src/stm32f1xx_it.c ****   while (1)
 129:Src/stm32f1xx_it.c ****   {
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 5


 130:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 131:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 132:Src/stm32f1xx_it.c ****   }
 133:Src/stm32f1xx_it.c **** }
 134:Src/stm32f1xx_it.c **** 
 135:Src/stm32f1xx_it.c **** /**
 136:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 137:Src/stm32f1xx_it.c ****   */
 138:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 139:Src/stm32f1xx_it.c **** {
 109              		.loc 1 139 0
 110              		.cfi_startproc
 111              		@ Volatile: function does not return.
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115              	.L9:
 116 0000 FEE7     		b	.L9
 117              		.cfi_endproc
 118              	.LFE70:
 120              		.section	.text.SVC_Handler,"ax",%progbits
 121              		.align	1
 122              		.global	SVC_Handler
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	SVC_Handler:
 129              	.LFB71:
 140:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 141:Src/stm32f1xx_it.c **** 
 142:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 143:Src/stm32f1xx_it.c ****   while (1)
 144:Src/stm32f1xx_it.c ****   {
 145:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 146:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 147:Src/stm32f1xx_it.c ****   }
 148:Src/stm32f1xx_it.c **** }
 149:Src/stm32f1xx_it.c **** 
 150:Src/stm32f1xx_it.c **** /**
 151:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 152:Src/stm32f1xx_it.c ****   */
 153:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 154:Src/stm32f1xx_it.c **** {
 130              		.loc 1 154 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 155:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 156:Src/stm32f1xx_it.c **** 
 157:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 158:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 159:Src/stm32f1xx_it.c **** 
 160:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 161:Src/stm32f1xx_it.c **** }
 135              		.loc 1 161 0
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 6


 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE71:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu softvfp
 148              	DebugMon_Handler:
 149              	.LFB72:
 162:Src/stm32f1xx_it.c **** 
 163:Src/stm32f1xx_it.c **** /**
 164:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 165:Src/stm32f1xx_it.c ****   */
 166:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 167:Src/stm32f1xx_it.c **** {
 150              		.loc 1 167 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 168:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 169:Src/stm32f1xx_it.c **** 
 170:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 171:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 172:Src/stm32f1xx_it.c **** 
 173:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 174:Src/stm32f1xx_it.c **** }
 155              		.loc 1 174 0
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE72:
 160              		.section	.text.PendSV_Handler,"ax",%progbits
 161              		.align	1
 162              		.global	PendSV_Handler
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	PendSV_Handler:
 169              	.LFB73:
 175:Src/stm32f1xx_it.c **** 
 176:Src/stm32f1xx_it.c **** /**
 177:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 178:Src/stm32f1xx_it.c ****   */
 179:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 180:Src/stm32f1xx_it.c **** {
 170              		.loc 1 180 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 181:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 182:Src/stm32f1xx_it.c **** 
 183:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 7


 184:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 185:Src/stm32f1xx_it.c **** 
 186:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 187:Src/stm32f1xx_it.c **** }
 175              		.loc 1 187 0
 176 0000 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE73:
 180              		.section	.text.SysTick_Handler,"ax",%progbits
 181              		.align	1
 182              		.global	SysTick_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu softvfp
 188              	SysTick_Handler:
 189              	.LFB74:
 188:Src/stm32f1xx_it.c **** 
 189:Src/stm32f1xx_it.c **** /**
 190:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 191:Src/stm32f1xx_it.c ****   */
 192:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 193:Src/stm32f1xx_it.c **** {
 190              		.loc 1 193 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
 195              	.LCFI0:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 194:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 195:Src/stm32f1xx_it.c **** 
 196:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 197:Src/stm32f1xx_it.c ****   HAL_IncTick();
 199              		.loc 1 197 0
 200 0002 FFF7FEFF 		bl	HAL_IncTick
 201              	.LVL0:
 198:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 199:Src/stm32f1xx_it.c **** 
 200:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 201:Src/stm32f1xx_it.c **** }
 202              		.loc 1 201 0
 203 0006 08BD     		pop	{r3, pc}
 204              		.cfi_endproc
 205              	.LFE74:
 207              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 208              		.align	1
 209              		.global	FLASH_IRQHandler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu softvfp
 215              	FLASH_IRQHandler:
 216              	.LFB75:
 202:Src/stm32f1xx_it.c **** 
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 8


 203:Src/stm32f1xx_it.c **** /******************************************************************************/
 204:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 205:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 206:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 207:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 208:Src/stm32f1xx_it.c **** /******************************************************************************/
 209:Src/stm32f1xx_it.c **** 
 210:Src/stm32f1xx_it.c **** /**
 211:Src/stm32f1xx_it.c ****   * @brief This function handles Flash global interrupt.
 212:Src/stm32f1xx_it.c ****   */
 213:Src/stm32f1xx_it.c **** void FLASH_IRQHandler(void)
 214:Src/stm32f1xx_it.c **** {
 217              		.loc 1 214 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI1:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 215:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 216:Src/stm32f1xx_it.c **** 
 217:Src/stm32f1xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 218:Src/stm32f1xx_it.c ****   HAL_FLASH_IRQHandler();
 226              		.loc 1 218 0
 227 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 228              	.LVL1:
 219:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 220:Src/stm32f1xx_it.c **** 
 221:Src/stm32f1xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 222:Src/stm32f1xx_it.c **** }
 229              		.loc 1 222 0
 230 0006 08BD     		pop	{r3, pc}
 231              		.cfi_endproc
 232              	.LFE75:
 234              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 235              		.align	1
 236              		.global	DMA1_Channel1_IRQHandler
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu softvfp
 242              	DMA1_Channel1_IRQHandler:
 243              	.LFB76:
 223:Src/stm32f1xx_it.c **** 
 224:Src/stm32f1xx_it.c **** /**
 225:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 226:Src/stm32f1xx_it.c ****   */
 227:Src/stm32f1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 228:Src/stm32f1xx_it.c **** {
 244              		.loc 1 228 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 08B5     		push	{r3, lr}
 249              	.LCFI2:
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 9


 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 3, -8
 252              		.cfi_offset 14, -4
 229:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 230:Src/stm32f1xx_it.c **** 
 231:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 232:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_memtomem_dma1_channel1);
 253              		.loc 1 232 0
 254 0002 0248     		ldr	r0, .L19
 255 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 256              	.LVL2:
 233:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 234:Src/stm32f1xx_it.c **** 
 235:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 236:Src/stm32f1xx_it.c **** }
 257              		.loc 1 236 0
 258 0008 08BD     		pop	{r3, pc}
 259              	.L20:
 260 000a 00BF     		.align	2
 261              	.L19:
 262 000c 00000000 		.word	hdma_memtomem_dma1_channel1
 263              		.cfi_endproc
 264              	.LFE76:
 266              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 267              		.align	1
 268              		.global	DMA1_Channel2_IRQHandler
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu softvfp
 274              	DMA1_Channel2_IRQHandler:
 275              	.LFB77:
 237:Src/stm32f1xx_it.c **** 
 238:Src/stm32f1xx_it.c **** /**
 239:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 240:Src/stm32f1xx_it.c ****   */
 241:Src/stm32f1xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 242:Src/stm32f1xx_it.c **** {
 276              		.loc 1 242 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 08B5     		push	{r3, lr}
 281              	.LCFI3:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
 243:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 244:Src/stm32f1xx_it.c **** 
 245:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 246:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim1_ch1);
 285              		.loc 1 246 0
 286 0002 0248     		ldr	r0, .L23
 287 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 288              	.LVL3:
 247:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 248:Src/stm32f1xx_it.c **** 
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 10


 249:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 250:Src/stm32f1xx_it.c **** }
 289              		.loc 1 250 0
 290 0008 08BD     		pop	{r3, pc}
 291              	.L24:
 292 000a 00BF     		.align	2
 293              	.L23:
 294 000c 00000000 		.word	hdma_tim1_ch1
 295              		.cfi_endproc
 296              	.LFE77:
 298              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 299              		.align	1
 300              		.global	DMA1_Channel4_IRQHandler
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu softvfp
 306              	DMA1_Channel4_IRQHandler:
 307              	.LFB78:
 251:Src/stm32f1xx_it.c **** 
 252:Src/stm32f1xx_it.c **** /**
 253:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 254:Src/stm32f1xx_it.c ****   */
 255:Src/stm32f1xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 256:Src/stm32f1xx_it.c **** {
 308              		.loc 1 256 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312 0000 08B5     		push	{r3, lr}
 313              	.LCFI4:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 257:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 258:Src/stm32f1xx_it.c **** 
 259:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 260:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 317              		.loc 1 260 0
 318 0002 0248     		ldr	r0, .L27
 319 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 320              	.LVL4:
 261:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 262:Src/stm32f1xx_it.c **** 
 263:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 264:Src/stm32f1xx_it.c **** }
 321              		.loc 1 264 0
 322 0008 08BD     		pop	{r3, pc}
 323              	.L28:
 324 000a 00BF     		.align	2
 325              	.L27:
 326 000c 00000000 		.word	hdma_usart1_tx
 327              		.cfi_endproc
 328              	.LFE78:
 330              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 331              		.align	1
 332              		.global	DMA1_Channel5_IRQHandler
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 11


 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu softvfp
 338              	DMA1_Channel5_IRQHandler:
 339              	.LFB79:
 265:Src/stm32f1xx_it.c **** 
 266:Src/stm32f1xx_it.c **** /**
 267:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 268:Src/stm32f1xx_it.c ****   */
 269:Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 270:Src/stm32f1xx_it.c **** {
 340              		.loc 1 270 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              	.LCFI5:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 3, -8
 348              		.cfi_offset 14, -4
 271:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 272:Src/stm32f1xx_it.c **** 
 273:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 274:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 349              		.loc 1 274 0
 350 0002 0248     		ldr	r0, .L31
 351 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 352              	.LVL5:
 275:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 276:Src/stm32f1xx_it.c **** 
 277:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 278:Src/stm32f1xx_it.c **** }
 353              		.loc 1 278 0
 354 0008 08BD     		pop	{r3, pc}
 355              	.L32:
 356 000a 00BF     		.align	2
 357              	.L31:
 358 000c 00000000 		.word	hdma_usart1_rx
 359              		.cfi_endproc
 360              	.LFE79:
 362              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 363              		.align	1
 364              		.global	DMA1_Channel6_IRQHandler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu softvfp
 370              	DMA1_Channel6_IRQHandler:
 371              	.LFB80:
 279:Src/stm32f1xx_it.c **** 
 280:Src/stm32f1xx_it.c **** /**
 281:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel6 global interrupt.
 282:Src/stm32f1xx_it.c ****   */
 283:Src/stm32f1xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 284:Src/stm32f1xx_it.c **** {
 372              		.loc 1 284 0
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 12


 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376 0000 08B5     		push	{r3, lr}
 377              	.LCFI6:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 3, -8
 380              		.cfi_offset 14, -4
 285:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 0 */
 286:Src/stm32f1xx_it.c **** 
 287:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 0 */
 288:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 381              		.loc 1 288 0
 382 0002 0248     		ldr	r0, .L35
 383 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 384              	.LVL6:
 289:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 1 */
 290:Src/stm32f1xx_it.c **** 
 291:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 1 */
 292:Src/stm32f1xx_it.c **** }
 385              		.loc 1 292 0
 386 0008 08BD     		pop	{r3, pc}
 387              	.L36:
 388 000a 00BF     		.align	2
 389              	.L35:
 390 000c 00000000 		.word	hdma_i2c1_tx
 391              		.cfi_endproc
 392              	.LFE80:
 394              		.section	.text.DMA1_Channel7_IRQHandler,"ax",%progbits
 395              		.align	1
 396              		.global	DMA1_Channel7_IRQHandler
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu softvfp
 402              	DMA1_Channel7_IRQHandler:
 403              	.LFB81:
 293:Src/stm32f1xx_it.c **** 
 294:Src/stm32f1xx_it.c **** /**
 295:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel7 global interrupt.
 296:Src/stm32f1xx_it.c ****   */
 297:Src/stm32f1xx_it.c **** void DMA1_Channel7_IRQHandler(void)
 298:Src/stm32f1xx_it.c **** {
 404              		.loc 1 298 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408 0000 08B5     		push	{r3, lr}
 409              	.LCFI7:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 3, -8
 412              		.cfi_offset 14, -4
 299:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel7_IRQn 0 */
 300:Src/stm32f1xx_it.c **** 
 301:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel7_IRQn 0 */
 302:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 413              		.loc 1 302 0
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 13


 414 0002 0248     		ldr	r0, .L39
 415 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 416              	.LVL7:
 303:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel7_IRQn 1 */
 304:Src/stm32f1xx_it.c **** 
 305:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel7_IRQn 1 */
 306:Src/stm32f1xx_it.c **** }
 417              		.loc 1 306 0
 418 0008 08BD     		pop	{r3, pc}
 419              	.L40:
 420 000a 00BF     		.align	2
 421              	.L39:
 422 000c 00000000 		.word	hdma_i2c1_rx
 423              		.cfi_endproc
 424              	.LFE81:
 426              		.section	.text.USB_LP_CAN1_RX0_IRQHandler,"ax",%progbits
 427              		.align	1
 428              		.global	USB_LP_CAN1_RX0_IRQHandler
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu softvfp
 434              	USB_LP_CAN1_RX0_IRQHandler:
 435              	.LFB82:
 307:Src/stm32f1xx_it.c **** 
 308:Src/stm32f1xx_it.c **** /**
 309:Src/stm32f1xx_it.c ****   * @brief This function handles USB low priority or CAN RX0 interrupts.
 310:Src/stm32f1xx_it.c ****   */
 311:Src/stm32f1xx_it.c **** void USB_LP_CAN1_RX0_IRQHandler(void)
 312:Src/stm32f1xx_it.c **** {
 436              		.loc 1 312 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440 0000 08B5     		push	{r3, lr}
 441              	.LCFI8:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 3, -8
 444              		.cfi_offset 14, -4
 313:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */
 314:Src/stm32f1xx_it.c **** 
 315:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
 316:Src/stm32f1xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 445              		.loc 1 316 0
 446 0002 0248     		ldr	r0, .L43
 447 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 448              	.LVL8:
 317:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */
 318:Src/stm32f1xx_it.c **** 
 319:Src/stm32f1xx_it.c ****   /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
 320:Src/stm32f1xx_it.c **** }
 449              		.loc 1 320 0
 450 0008 08BD     		pop	{r3, pc}
 451              	.L44:
 452 000a 00BF     		.align	2
 453              	.L43:
 454 000c 00000000 		.word	hpcd_USB_FS
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 14


 455              		.cfi_endproc
 456              	.LFE82:
 458              		.section	.text.TIM1_BRK_IRQHandler,"ax",%progbits
 459              		.align	1
 460              		.global	TIM1_BRK_IRQHandler
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu softvfp
 466              	TIM1_BRK_IRQHandler:
 467              	.LFB83:
 321:Src/stm32f1xx_it.c **** 
 322:Src/stm32f1xx_it.c **** /**
 323:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 break interrupt.
 324:Src/stm32f1xx_it.c ****   */
 325:Src/stm32f1xx_it.c **** void TIM1_BRK_IRQHandler(void)
 326:Src/stm32f1xx_it.c **** {
 468              		.loc 1 326 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              	.LCFI9:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 3, -8
 476              		.cfi_offset 14, -4
 327:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_IRQn 0 */
 328:Src/stm32f1xx_it.c **** 
 329:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_BRK_IRQn 0 */
 330:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 477              		.loc 1 330 0
 478 0002 0248     		ldr	r0, .L47
 479 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 480              	.LVL9:
 331:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_IRQn 1 */
 332:Src/stm32f1xx_it.c **** 
 333:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_BRK_IRQn 1 */
 334:Src/stm32f1xx_it.c **** }
 481              		.loc 1 334 0
 482 0008 08BD     		pop	{r3, pc}
 483              	.L48:
 484 000a 00BF     		.align	2
 485              	.L47:
 486 000c 00000000 		.word	htim1
 487              		.cfi_endproc
 488              	.LFE83:
 490              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 491              		.align	1
 492              		.global	TIM1_UP_IRQHandler
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu softvfp
 498              	TIM1_UP_IRQHandler:
 499              	.LFB84:
 335:Src/stm32f1xx_it.c **** 
 336:Src/stm32f1xx_it.c **** /**
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 15


 337:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 338:Src/stm32f1xx_it.c ****   */
 339:Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 340:Src/stm32f1xx_it.c **** {
 500              		.loc 1 340 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504 0000 08B5     		push	{r3, lr}
 505              	.LCFI10:
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 3, -8
 508              		.cfi_offset 14, -4
 341:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 342:Src/stm32f1xx_it.c **** 
 343:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 344:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 509              		.loc 1 344 0
 510 0002 0248     		ldr	r0, .L51
 511 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 512              	.LVL10:
 345:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 346:Src/stm32f1xx_it.c **** 
 347:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 348:Src/stm32f1xx_it.c **** }
 513              		.loc 1 348 0
 514 0008 08BD     		pop	{r3, pc}
 515              	.L52:
 516 000a 00BF     		.align	2
 517              	.L51:
 518 000c 00000000 		.word	htim1
 519              		.cfi_endproc
 520              	.LFE84:
 522              		.section	.text.TIM1_TRG_COM_IRQHandler,"ax",%progbits
 523              		.align	1
 524              		.global	TIM1_TRG_COM_IRQHandler
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu softvfp
 530              	TIM1_TRG_COM_IRQHandler:
 531              	.LFB85:
 349:Src/stm32f1xx_it.c **** 
 350:Src/stm32f1xx_it.c **** /**
 351:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts.
 352:Src/stm32f1xx_it.c ****   */
 353:Src/stm32f1xx_it.c **** void TIM1_TRG_COM_IRQHandler(void)
 354:Src/stm32f1xx_it.c **** {
 532              		.loc 1 354 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536 0000 08B5     		push	{r3, lr}
 537              	.LCFI11:
 538              		.cfi_def_cfa_offset 8
 539              		.cfi_offset 3, -8
 540              		.cfi_offset 14, -4
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 16


 355:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_IRQn 0 */
 356:Src/stm32f1xx_it.c **** 
 357:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_TRG_COM_IRQn 0 */
 358:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 541              		.loc 1 358 0
 542 0002 0248     		ldr	r0, .L55
 543 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 544              	.LVL11:
 359:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_IRQn 1 */
 360:Src/stm32f1xx_it.c **** 
 361:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_TRG_COM_IRQn 1 */
 362:Src/stm32f1xx_it.c **** }
 545              		.loc 1 362 0
 546 0008 08BD     		pop	{r3, pc}
 547              	.L56:
 548 000a 00BF     		.align	2
 549              	.L55:
 550 000c 00000000 		.word	htim1
 551              		.cfi_endproc
 552              	.LFE85:
 554              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 555              		.align	1
 556              		.global	TIM1_CC_IRQHandler
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu softvfp
 562              	TIM1_CC_IRQHandler:
 563              	.LFB86:
 363:Src/stm32f1xx_it.c **** 
 364:Src/stm32f1xx_it.c **** /**
 365:Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 capture compare interrupt.
 366:Src/stm32f1xx_it.c ****   */
 367:Src/stm32f1xx_it.c **** void TIM1_CC_IRQHandler(void)
 368:Src/stm32f1xx_it.c **** {
 564              		.loc 1 368 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568 0000 08B5     		push	{r3, lr}
 569              	.LCFI12:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 3, -8
 572              		.cfi_offset 14, -4
 369:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 0 */
 370:Src/stm32f1xx_it.c **** 
 371:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 0 */
 372:Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 573              		.loc 1 372 0
 574 0002 0248     		ldr	r0, .L59
 575 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 576              	.LVL12:
 373:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 1 */
 374:Src/stm32f1xx_it.c **** 
 375:Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 1 */
 376:Src/stm32f1xx_it.c **** }
 577              		.loc 1 376 0
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 17


 578 0008 08BD     		pop	{r3, pc}
 579              	.L60:
 580 000a 00BF     		.align	2
 581              	.L59:
 582 000c 00000000 		.word	htim1
 583              		.cfi_endproc
 584              	.LFE86:
 586              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 587              		.align	1
 588              		.global	I2C1_EV_IRQHandler
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	I2C1_EV_IRQHandler:
 595              	.LFB87:
 377:Src/stm32f1xx_it.c **** 
 378:Src/stm32f1xx_it.c **** /**
 379:Src/stm32f1xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 380:Src/stm32f1xx_it.c ****   */
 381:Src/stm32f1xx_it.c **** void I2C1_EV_IRQHandler(void)
 382:Src/stm32f1xx_it.c **** {
 596              		.loc 1 382 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 08B5     		push	{r3, lr}
 601              	.LCFI13:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 3, -8
 604              		.cfi_offset 14, -4
 383:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 384:Src/stm32f1xx_it.c **** 
 385:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 386:Src/stm32f1xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 605              		.loc 1 386 0
 606 0002 0248     		ldr	r0, .L63
 607 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 608              	.LVL13:
 387:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 388:Src/stm32f1xx_it.c **** 
 389:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 390:Src/stm32f1xx_it.c **** }
 609              		.loc 1 390 0
 610 0008 08BD     		pop	{r3, pc}
 611              	.L64:
 612 000a 00BF     		.align	2
 613              	.L63:
 614 000c 00000000 		.word	hi2c1
 615              		.cfi_endproc
 616              	.LFE87:
 618              		.section	.text.I2C1_ER_IRQHandler,"ax",%progbits
 619              		.align	1
 620              		.global	I2C1_ER_IRQHandler
 621              		.syntax unified
 622              		.thumb
 623              		.thumb_func
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 18


 624              		.fpu softvfp
 626              	I2C1_ER_IRQHandler:
 627              	.LFB88:
 391:Src/stm32f1xx_it.c **** 
 392:Src/stm32f1xx_it.c **** /**
 393:Src/stm32f1xx_it.c ****   * @brief This function handles I2C1 error interrupt.
 394:Src/stm32f1xx_it.c ****   */
 395:Src/stm32f1xx_it.c **** void I2C1_ER_IRQHandler(void)
 396:Src/stm32f1xx_it.c **** {
 628              		.loc 1 396 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632 0000 08B5     		push	{r3, lr}
 633              	.LCFI14:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 3, -8
 636              		.cfi_offset 14, -4
 397:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 0 */
 398:Src/stm32f1xx_it.c **** 
 399:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 0 */
 400:Src/stm32f1xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c1);
 637              		.loc 1 400 0
 638 0002 0248     		ldr	r0, .L67
 639 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 640              	.LVL14:
 401:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_ER_IRQn 1 */
 402:Src/stm32f1xx_it.c **** 
 403:Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_ER_IRQn 1 */
 404:Src/stm32f1xx_it.c **** }
 641              		.loc 1 404 0
 642 0008 08BD     		pop	{r3, pc}
 643              	.L68:
 644 000a 00BF     		.align	2
 645              	.L67:
 646 000c 00000000 		.word	hi2c1
 647              		.cfi_endproc
 648              	.LFE88:
 650              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 651              		.align	1
 652              		.global	SPI1_IRQHandler
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu softvfp
 658              	SPI1_IRQHandler:
 659              	.LFB89:
 405:Src/stm32f1xx_it.c **** 
 406:Src/stm32f1xx_it.c **** /**
 407:Src/stm32f1xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 408:Src/stm32f1xx_it.c ****   */
 409:Src/stm32f1xx_it.c **** void SPI1_IRQHandler(void)
 410:Src/stm32f1xx_it.c **** {
 660              		.loc 1 410 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 19


 664 0000 08B5     		push	{r3, lr}
 665              	.LCFI15:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 3, -8
 668              		.cfi_offset 14, -4
 411:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 412:Src/stm32f1xx_it.c **** 
 413:Src/stm32f1xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 414:Src/stm32f1xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 669              		.loc 1 414 0
 670 0002 0248     		ldr	r0, .L71
 671 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 672              	.LVL15:
 415:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 416:Src/stm32f1xx_it.c **** 
 417:Src/stm32f1xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 418:Src/stm32f1xx_it.c **** }
 673              		.loc 1 418 0
 674 0008 08BD     		pop	{r3, pc}
 675              	.L72:
 676 000a 00BF     		.align	2
 677              	.L71:
 678 000c 00000000 		.word	hspi1
 679              		.cfi_endproc
 680              	.LFE89:
 682              		.section	.text.USART1_IRQHandler,"ax",%progbits
 683              		.align	1
 684              		.global	USART1_IRQHandler
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu softvfp
 690              	USART1_IRQHandler:
 691              	.LFB90:
 419:Src/stm32f1xx_it.c **** 
 420:Src/stm32f1xx_it.c **** /**
 421:Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 422:Src/stm32f1xx_it.c ****   */
 423:Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 424:Src/stm32f1xx_it.c **** {
 692              		.loc 1 424 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696 0000 08B5     		push	{r3, lr}
 697              	.LCFI16:
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 3, -8
 700              		.cfi_offset 14, -4
 425:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 426:Src/stm32f1xx_it.c **** 
 427:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 428:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 701              		.loc 1 428 0
 702 0002 0248     		ldr	r0, .L75
 703 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 704              	.LVL16:
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 20


 429:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 430:Src/stm32f1xx_it.c **** 
 431:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 432:Src/stm32f1xx_it.c **** }
 705              		.loc 1 432 0
 706 0008 08BD     		pop	{r3, pc}
 707              	.L76:
 708 000a 00BF     		.align	2
 709              	.L75:
 710 000c 00000000 		.word	huart1
 711              		.cfi_endproc
 712              	.LFE90:
 714              		.text
 715              	.Letext0:
 716              		.file 2 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 717              		.file 3 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 718              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 719              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 720              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 721              		.file 7 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 722              		.file 8 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 723              		.file 9 "/Users/jason/CMDTools/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 724              		.file 10 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 725              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 726              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 727              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 728              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 729              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 730              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 731              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 732              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 733              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 734              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash.h"
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:16     .text.NMI_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:37     .text.HardFault_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:44     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:58     .text.MemManage_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:65     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:79     .text.BusFault_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:86     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:100    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:107    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:121    .text.SVC_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:128    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:141    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:161    .text.PendSV_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:168    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:181    .text.SysTick_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:188    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:208    .text.FLASH_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:215    .text.FLASH_IRQHandler:0000000000000000 FLASH_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:235    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:242    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:262    .text.DMA1_Channel1_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:267    .text.DMA1_Channel2_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:274    .text.DMA1_Channel2_IRQHandler:0000000000000000 DMA1_Channel2_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:294    .text.DMA1_Channel2_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:299    .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:306    .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:326    .text.DMA1_Channel4_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:331    .text.DMA1_Channel5_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:338    .text.DMA1_Channel5_IRQHandler:0000000000000000 DMA1_Channel5_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:358    .text.DMA1_Channel5_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:363    .text.DMA1_Channel6_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:370    .text.DMA1_Channel6_IRQHandler:0000000000000000 DMA1_Channel6_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:390    .text.DMA1_Channel6_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:395    .text.DMA1_Channel7_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:402    .text.DMA1_Channel7_IRQHandler:0000000000000000 DMA1_Channel7_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:422    .text.DMA1_Channel7_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:427    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:434    .text.USB_LP_CAN1_RX0_IRQHandler:0000000000000000 USB_LP_CAN1_RX0_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:454    .text.USB_LP_CAN1_RX0_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:459    .text.TIM1_BRK_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:466    .text.TIM1_BRK_IRQHandler:0000000000000000 TIM1_BRK_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:486    .text.TIM1_BRK_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:491    .text.TIM1_UP_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:498    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:518    .text.TIM1_UP_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:523    .text.TIM1_TRG_COM_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:530    .text.TIM1_TRG_COM_IRQHandler:0000000000000000 TIM1_TRG_COM_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:550    .text.TIM1_TRG_COM_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:555    .text.TIM1_CC_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:562    .text.TIM1_CC_IRQHandler:0000000000000000 TIM1_CC_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:582    .text.TIM1_CC_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:587    .text.I2C1_EV_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:594    .text.I2C1_EV_IRQHandler:0000000000000000 I2C1_EV_IRQHandler
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s 			page 22


/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:614    .text.I2C1_EV_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:619    .text.I2C1_ER_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:626    .text.I2C1_ER_IRQHandler:0000000000000000 I2C1_ER_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:646    .text.I2C1_ER_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:651    .text.SPI1_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:658    .text.SPI1_IRQHandler:0000000000000000 SPI1_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:678    .text.SPI1_IRQHandler:000000000000000c $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:683    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:690    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccYSqL3c.s:710    .text.USART1_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_FLASH_IRQHandler
HAL_DMA_IRQHandler
hdma_memtomem_dma1_channel1
hdma_tim1_ch1
hdma_usart1_tx
hdma_usart1_rx
hdma_i2c1_tx
hdma_i2c1_rx
HAL_PCD_IRQHandler
hpcd_USB_FS
HAL_TIM_IRQHandler
htim1
HAL_I2C_EV_IRQHandler
hi2c1
HAL_I2C_ER_IRQHandler
HAL_SPI_IRQHandler
hspi1
HAL_UART_IRQHandler
huart1
