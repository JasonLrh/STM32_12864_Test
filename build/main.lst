ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemClock_Config:
  24              	.LFB67:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "dma.h"
  24:Src/main.c    **** #include "i2c.h"
  25:Src/main.c    **** #include "spi.h"
  26:Src/main.c    **** #include "tim.h"
  27:Src/main.c    **** #include "usart.h"
  28:Src/main.c    **** #include "usb_device.h"
  29:Src/main.c    **** #include "gpio.h"
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  32:Src/main.c    **** /* USER CODE BEGIN Includes */
  33:Src/main.c    **** #include "ssd1306.h"
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 2


  34:Src/main.c    **** #include <stdio.h>
  35:Src/main.c    **** #include <stdlib.h>
  36:Src/main.c    **** /* USER CODE END Includes */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PTD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PTD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PD */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  49:Src/main.c    **** /* USER CODE BEGIN PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PM */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** /* USER CODE BEGIN PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /**
  71:Src/main.c    ****   * @brief  The application entry point.
  72:Src/main.c    ****   * @retval int
  73:Src/main.c    ****   */
  74:Src/main.c    **** int main(void)
  75:Src/main.c    **** {
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END 1 */
  79:Src/main.c    ****   
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Src/main.c    ****   HAL_Init();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END Init */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 3


  91:Src/main.c    ****   SystemClock_Config();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Initialize all configured peripherals */
  98:Src/main.c    ****   MX_GPIO_Init();
  99:Src/main.c    ****   MX_DMA_Init();
 100:Src/main.c    ****   MX_I2C1_Init();
 101:Src/main.c    ****   MX_SPI1_Init();
 102:Src/main.c    ****   MX_USART1_UART_Init();
 103:Src/main.c    ****   MX_TIM1_Init();
 104:Src/main.c    ****   MX_USB_DEVICE_Init();
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    ****   SSD1306_Init();
 107:Src/main.c    ****   SSD1306_Fill(White);
 108:Src/main.c    ****   SSD1306_SetCursor(0,0);
 109:Src/main.c    ****   SSD1306_WriteString("Hello Lrh",Font_7x10,Black);
 110:Src/main.c    ****   SSD1306_UpdateScreen();
 111:Src/main.c    **** 
 112:Src/main.c    ****   uint8_t i = 0;
 113:Src/main.c    ****   uint8_t direction = 1;
 114:Src/main.c    ****   HAL_FLASH_Unlock();
 115:Src/main.c    ****   /* USER CODE END 2 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Infinite loop */
 118:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 119:Src/main.c    ****   while (1)
 120:Src/main.c    ****   {
 121:Src/main.c    ****     /* USER CODE END WHILE */
 122:Src/main.c    **** 
 123:Src/main.c    ****     /* USER CODE BEGIN 3 */
 124:Src/main.c    ****     SSD1306_Fill(White);
 125:Src/main.c    ****     SSD1306_SetCursor(0,i);
 126:Src/main.c    ****     i = i + direction;
 127:Src/main.c    ****     SSD1306_WriteString("Hello Lrh",Font_7x10,Black);
 128:Src/main.c    ****     SSD1306_UpdateScreen();
 129:Src/main.c    ****     HAL_Delay(1);
 130:Src/main.c    ****     if (i >=50 || i < 1)
 131:Src/main.c    ****     {
 132:Src/main.c    ****       direction = - direction ;
 133:Src/main.c    ****       HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 134:Src/main.c    ****     }
 135:Src/main.c    ****   }
 136:Src/main.c    ****   /* USER CODE END 3 */
 137:Src/main.c    **** }
 138:Src/main.c    **** 
 139:Src/main.c    **** /**
 140:Src/main.c    ****   * @brief System Clock Configuration
 141:Src/main.c    ****   * @retval None
 142:Src/main.c    ****   */
 143:Src/main.c    **** void SystemClock_Config(void)
 144:Src/main.c    **** {
  26              		.loc 1 144 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 4


  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 95B0     		sub	sp, sp, #84
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 96
 145:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  39              		.loc 1 145 0
  40 0004 0024     		movs	r4, #0
  41 0006 0C94     		str	r4, [sp, #48]
  42 0008 0D94     		str	r4, [sp, #52]
  43 000a 0F94     		str	r4, [sp, #60]
  44 000c 1094     		str	r4, [sp, #64]
 146:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  45              		.loc 1 146 0
  46 000e 0594     		str	r4, [sp, #20]
  47 0010 0694     		str	r4, [sp, #24]
  48 0012 0794     		str	r4, [sp, #28]
  49 0014 0894     		str	r4, [sp, #32]
  50 0016 0994     		str	r4, [sp, #36]
 147:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  51              		.loc 1 147 0
  52 0018 0194     		str	r4, [sp, #4]
  53 001a 0294     		str	r4, [sp, #8]
  54 001c 0394     		str	r4, [sp, #12]
  55 001e 0494     		str	r4, [sp, #16]
 148:Src/main.c    **** 
 149:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 150:Src/main.c    ****   */
 151:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  56              		.loc 1 151 0
  57 0020 0122     		movs	r2, #1
  58 0022 0A92     		str	r2, [sp, #40]
 152:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  59              		.loc 1 152 0
  60 0024 4FF48033 		mov	r3, #65536
  61 0028 0B93     		str	r3, [sp, #44]
 153:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 154:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  62              		.loc 1 154 0
  63 002a 0E92     		str	r2, [sp, #56]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  64              		.loc 1 155 0
  65 002c 0225     		movs	r5, #2
  66 002e 1195     		str	r5, [sp, #68]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  67              		.loc 1 156 0
  68 0030 1293     		str	r3, [sp, #72]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  69              		.loc 1 157 0
  70 0032 4FF4E013 		mov	r3, #1835008
  71 0036 1393     		str	r3, [sp, #76]
 158:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 5


  72              		.loc 1 158 0
  73 0038 0AA8     		add	r0, sp, #40
  74 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
  75              	.LVL0:
 159:Src/main.c    ****   {
 160:Src/main.c    ****     Error_Handler();
 161:Src/main.c    ****   }
 162:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 163:Src/main.c    ****   */
 164:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  76              		.loc 1 164 0
  77 003e 0F23     		movs	r3, #15
  78 0040 0593     		str	r3, [sp, #20]
 165:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  79              		.loc 1 166 0
  80 0042 0695     		str	r5, [sp, #24]
 167:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  81              		.loc 1 167 0
  82 0044 0794     		str	r4, [sp, #28]
 168:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  83              		.loc 1 168 0
  84 0046 4FF48063 		mov	r3, #1024
  85 004a 0893     		str	r3, [sp, #32]
 169:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  86              		.loc 1 169 0
  87 004c 0994     		str	r4, [sp, #36]
 170:Src/main.c    **** 
 171:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  88              		.loc 1 171 0
  89 004e 2946     		mov	r1, r5
  90 0050 05A8     		add	r0, sp, #20
  91 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  92              	.LVL1:
 172:Src/main.c    ****   {
 173:Src/main.c    ****     Error_Handler();
 174:Src/main.c    ****   }
 175:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
  93              		.loc 1 175 0
  94 0056 1023     		movs	r3, #16
  95 0058 0193     		str	r3, [sp, #4]
 176:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
  96              		.loc 1 176 0
  97 005a 0494     		str	r4, [sp, #16]
 177:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
  98              		.loc 1 177 0
  99 005c 01A8     		add	r0, sp, #4
 100 005e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 101              	.LVL2:
 178:Src/main.c    ****   {
 179:Src/main.c    ****     Error_Handler();
 180:Src/main.c    ****   }
 181:Src/main.c    **** }
 102              		.loc 1 181 0
 103 0062 15B0     		add	sp, sp, #84
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 6


 106              		@ sp needed
 107 0064 30BD     		pop	{r4, r5, pc}
 108              		.cfi_endproc
 109              	.LFE67:
 111              		.section	.text.main,"ax",%progbits
 112              		.align	1
 113              		.global	main
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	main:
 120              	.LFB66:
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
 121              		.loc 1 75 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 38B5     		push	{r3, r4, r5, lr}
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 16
 128              		.cfi_offset 3, -16
 129              		.cfi_offset 4, -12
 130              		.cfi_offset 5, -8
 131              		.cfi_offset 14, -4
  84:Src/main.c    **** 
 132              		.loc 1 84 0
 133 0002 FFF7FEFF 		bl	HAL_Init
 134              	.LVL3:
  91:Src/main.c    **** 
 135              		.loc 1 91 0
 136 0006 FFF7FEFF 		bl	SystemClock_Config
 137              	.LVL4:
  98:Src/main.c    ****   MX_DMA_Init();
 138              		.loc 1 98 0
 139 000a FFF7FEFF 		bl	MX_GPIO_Init
 140              	.LVL5:
  99:Src/main.c    ****   MX_I2C1_Init();
 141              		.loc 1 99 0
 142 000e FFF7FEFF 		bl	MX_DMA_Init
 143              	.LVL6:
 100:Src/main.c    ****   MX_SPI1_Init();
 144              		.loc 1 100 0
 145 0012 FFF7FEFF 		bl	MX_I2C1_Init
 146              	.LVL7:
 101:Src/main.c    ****   MX_USART1_UART_Init();
 147              		.loc 1 101 0
 148 0016 FFF7FEFF 		bl	MX_SPI1_Init
 149              	.LVL8:
 102:Src/main.c    ****   MX_TIM1_Init();
 150              		.loc 1 102 0
 151 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 152              	.LVL9:
 103:Src/main.c    ****   MX_USB_DEVICE_Init();
 153              		.loc 1 103 0
 154 001e FFF7FEFF 		bl	MX_TIM1_Init
 155              	.LVL10:
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 7


 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 156              		.loc 1 104 0
 157 0022 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 158              	.LVL11:
 106:Src/main.c    ****   SSD1306_Fill(White);
 159              		.loc 1 106 0
 160 0026 FFF7FEFF 		bl	SSD1306_Init
 161              	.LVL12:
 107:Src/main.c    ****   SSD1306_SetCursor(0,0);
 162              		.loc 1 107 0
 163 002a 0120     		movs	r0, #1
 164 002c FFF7FEFF 		bl	SSD1306_Fill
 165              	.LVL13:
 108:Src/main.c    ****   SSD1306_WriteString("Hello Lrh",Font_7x10,Black);
 166              		.loc 1 108 0
 167 0030 0021     		movs	r1, #0
 168 0032 0846     		mov	r0, r1
 169 0034 FFF7FEFF 		bl	SSD1306_SetCursor
 170              	.LVL14:
 109:Src/main.c    ****   SSD1306_UpdateScreen();
 171              		.loc 1 109 0
 172 0038 154A     		ldr	r2, .L7
 173 003a 0023     		movs	r3, #0
 174 003c 06CA     		ldm	r2, {r1, r2}
 175 003e 1548     		ldr	r0, .L7+4
 176 0040 FFF7FEFF 		bl	SSD1306_WriteString
 177              	.LVL15:
 110:Src/main.c    **** 
 178              		.loc 1 110 0
 179 0044 FFF7FEFF 		bl	SSD1306_UpdateScreen
 180              	.LVL16:
 114:Src/main.c    ****   /* USER CODE END 2 */
 181              		.loc 1 114 0
 182 0048 FFF7FEFF 		bl	HAL_FLASH_Unlock
 183              	.LVL17:
 113:Src/main.c    ****   HAL_FLASH_Unlock();
 184              		.loc 1 113 0
 185 004c 0125     		movs	r5, #1
 112:Src/main.c    ****   uint8_t direction = 1;
 186              		.loc 1 112 0
 187 004e 0024     		movs	r4, #0
 188              	.LVL18:
 189              	.L4:
 124:Src/main.c    ****     SSD1306_SetCursor(0,i);
 190              		.loc 1 124 0
 191 0050 0120     		movs	r0, #1
 192 0052 FFF7FEFF 		bl	SSD1306_Fill
 193              	.LVL19:
 125:Src/main.c    ****     i = i + direction;
 194              		.loc 1 125 0
 195 0056 2146     		mov	r1, r4
 196 0058 0020     		movs	r0, #0
 197 005a FFF7FEFF 		bl	SSD1306_SetCursor
 198              	.LVL20:
 126:Src/main.c    ****     SSD1306_WriteString("Hello Lrh",Font_7x10,Black);
 199              		.loc 1 126 0
 200 005e 2C44     		add	r4, r4, r5
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 8


 201              	.LVL21:
 202 0060 E4B2     		uxtb	r4, r4
 203              	.LVL22:
 127:Src/main.c    ****     SSD1306_UpdateScreen();
 204              		.loc 1 127 0
 205 0062 0B4A     		ldr	r2, .L7
 206 0064 0023     		movs	r3, #0
 207 0066 06CA     		ldm	r2, {r1, r2}
 208 0068 0A48     		ldr	r0, .L7+4
 209 006a FFF7FEFF 		bl	SSD1306_WriteString
 210              	.LVL23:
 128:Src/main.c    ****     HAL_Delay(1);
 211              		.loc 1 128 0
 212 006e FFF7FEFF 		bl	SSD1306_UpdateScreen
 213              	.LVL24:
 129:Src/main.c    ****     if (i >=50 || i < 1)
 214              		.loc 1 129 0
 215 0072 0120     		movs	r0, #1
 216 0074 FFF7FEFF 		bl	HAL_Delay
 217              	.LVL25:
 130:Src/main.c    ****     {
 218              		.loc 1 130 0
 219 0078 631E     		subs	r3, r4, #1
 220 007a DBB2     		uxtb	r3, r3
 221 007c 302B     		cmp	r3, #48
 222 007e E7D9     		bls	.L4
 132:Src/main.c    ****       HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 223              		.loc 1 132 0
 224 0080 6D42     		negs	r5, r5
 225              	.LVL26:
 226 0082 EDB2     		uxtb	r5, r5
 227              	.LVL27:
 133:Src/main.c    ****     }
 228              		.loc 1 133 0
 229 0084 4FF40051 		mov	r1, #8192
 230 0088 0348     		ldr	r0, .L7+8
 231 008a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 232              	.LVL28:
 233 008e DFE7     		b	.L4
 234              	.L8:
 235              		.align	2
 236              	.L7:
 237 0090 00000000 		.word	Font_7x10
 238 0094 00000000 		.word	.LC0
 239 0098 00100140 		.word	1073811456
 240              		.cfi_endproc
 241              	.LFE66:
 243              		.section	.text.Error_Handler,"ax",%progbits
 244              		.align	1
 245              		.global	Error_Handler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	Error_Handler:
 252              	.LFB68:
 182:Src/main.c    **** 
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 9


 183:Src/main.c    **** /* USER CODE BEGIN 4 */
 184:Src/main.c    **** 
 185:Src/main.c    **** /* USER CODE END 4 */
 186:Src/main.c    **** 
 187:Src/main.c    **** /**
 188:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 189:Src/main.c    ****   * @retval None
 190:Src/main.c    ****   */
 191:Src/main.c    **** void Error_Handler(void)
 192:Src/main.c    **** {
 253              		.loc 1 192 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 193:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 194:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 197:Src/main.c    **** }
 258              		.loc 1 197 0
 259 0000 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE68:
 263              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 264              		.align	2
 265              	.LC0:
 266 0000 48656C6C 		.ascii	"Hello Lrh\000"
 266      6F204C72 
 266      6800
 267              		.text
 268              	.Letext0:
 269              		.file 2 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 270              		.file 3 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 271              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 272              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 273              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 274              		.file 7 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 275              		.file 8 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 276              		.file 9 "/Users/jason/CMDTools/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 277              		.file 10 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 278              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 279              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 280              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 281              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 282              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 283              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 284              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 285              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 286              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 287              		.file 20 "Inc/dma.h"
 288              		.file 21 "Inc/i2c.h"
 289              		.file 22 "Inc/spi.h"
 290              		.file 23 "Inc/tim.h"
 291              		.file 24 "Inc/usart.h"
 292              		.file 25 "/Users/jason/CMDTools/gcc-arm-none-eabi/arm-none-eabi/include/stdlib.h"
 293              		.file 26 "Drivers/ssd1306/ssd1306_fonts.h"
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 10


 294              		.file 27 "Drivers/ssd1306/ssd1306.h"
 295              		.file 28 "Inc/gpio.h"
 296              		.file 29 "Inc/usb_device.h"
 297              		.file 30 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash.h"
 298              		.file 31 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:16     .text.SystemClock_Config:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:23     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:112    .text.main:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:119    .text.main:0000000000000000 main
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:237    .text.main:0000000000000090 $d
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:244    .text.Error_Handler:0000000000000000 $t
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:251    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/5z/_9rkktvd05b3324pd1f03y0c0000gn/T//ccQBvap0.s:264    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C1_Init
MX_SPI1_Init
MX_USART1_UART_Init
MX_TIM1_Init
MX_USB_DEVICE_Init
SSD1306_Init
SSD1306_Fill
SSD1306_SetCursor
SSD1306_WriteString
SSD1306_UpdateScreen
HAL_FLASH_Unlock
HAL_Delay
HAL_GPIO_TogglePin
Font_7x10
